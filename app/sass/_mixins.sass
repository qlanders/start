=va()
  font-size : 0
  &:before
    content: ''
    display : inline-block
    vertical-align : middle
    width : 0
    height : 100%

=br($var)
  +border-radius($var)

=counter($var, $symb: '')
  counter-reset: $var
  & > li:before
    content: counter($var)"#{$symb}"
    counter-increment: $var

=justyfy()
  text-align: justify
  line-height: 0
  font-size: 0
  -ms-text-justify: newspaper
  text-justify: newspaper
  zoom: 1
  -ms-text-align-last: justify
  text-align-last: justify
  &:after
    content: ''
    display: inline-block
    width: 100%
    height: 0
    visibility: hidden
    overflow: hidden

=text-overflow()
  overflow: hidden
  -ms-text-overflow: ellipsis
  text-overflow: ellipsis
  white-space: nowrap

=arr($width, $height, $bg, $direction)
  width: 0
  height: 0
  border-style: solid
  @if $direction == t
    border-width: 0 $width / 2 $height $width / 2
    border-color: transparent transparent $bg transparent
  @if $direction == r
    border-width: $height / 2 0 $height / 2 $width
    border-color: transparent transparent transparent $bg
  @if $direction == b
    border-width: $height $width / 2 0 $width / 2
    border-color: $bg transparent transparent transparent
  @if $direction == l
    border-width: $height / 2 $width $height / 2 0
    border-color: transparent $bg transparent transparent
  @if $direction == tl
    border-width: $height $width 0 0
    border-color: $bg transparent transparent transparent
  @if $direction == tr
    border-width: 0 $width $height 0
    border-color: transparent $bg transparent transparent
  @if $direction == br
    border-width: 0 0 $height $width
    border-color: transparent transparent $bg transparent
  @if $direction == bl
    border-width: $height 0 0 $width
    border-color: transparent transparent transparent $bg
    
=hide-styling() 
  -webkit-appearance: none
  -moz-appearance: none
  &::-ms-expand
    display: none

=push-auto()
  margin:
    left: auto
    right: auto

=pseudo($display: block, $pos: absolute, $content: '')
  content: $content
  display: $display
  position: $pos

=responcive-ratio($x, $y, $pseudo: false)
  $padding: unquote(($y / $x) * 100 + "%")
  @if $pseudo
    &:before
      +pseudo($pos: relative)
      width: 100%
      padding-top: $padding
  @else
    padding-top: $padding

@function z($name)
  @if index($z-indexes, $name)
    @return (length($z-indexes) - index($z-indexes, $name)) + 1
  @else
    @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}'
    @return null

=hardware($backface: true, $perspective: 1000)
  @if $backface
    backface-visibility: hidden
  perspective: $perspective
  
=replace()
  text-indent: 100%
  white-space: nowrap
  overflow: hidden

=autofill($background: #FFF, $color: #000)
  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill
    -webkit-text-fill-color: $color
    -webkit-box-shadow: 0 0 0 1000px $background inset
  
@function unicode($str)
  @return unquote("\"")+unquote(str-insert($str, "\\", 1))+unquote("\"")

=centerX($pos: 50%)
  left: $pos
  +transform(translateX(-50%))
=centerY($pos: 50%)
  top: $pos
  +transform(translateY(-50%))
=center($posX: 50%, $posY: 50%)
  left: $posX
  top: $posY
  +transform(translateX(-50%) translateY(-50%))
  
=centerX-margin($width: 20px)
  left: 50%
  margin-left: - ($width / 2)
=centerY-margin($height: 20px)
  top: 50%
  margin-top: - ($height / 2)
=center-margin($width: 20px, $height: 20px)
  top: 50%
  left: 50%
  margin-left: - ($width / 2)
  margin-top: - ($height / 2)
  


//---------------------SVG-SPRITE

@import sprite-css

$sprite: map-get($icons, sprite) !default
$baseFontSize: 16px !default

@function sprite-attr($icon, $attr)
  $newIcon: map-get($icons, $icon)
  @if $newIcon == null
    @warn "Can't find an icon with the name #{$icon}"
  @return map-get($newIcon, $attr)

@function icon-attr($icon)
  $attr: (width: sprite-attr($icon, width), height: sprite-attr($icon, height), x: sprite-attr($icon, backgroundX), y: sprite-attr($icon, backgroundY))
  @return $attr

@mixin sprite($icon, $type: all)
  @if $type == all
    // Shares the backgrounds
    @extend %sprite

  $iconMap: icon-attr($icon)

  // Outputs dimensions in em
  @if $type == all or $type == size
    width: mq-px2em(map-get($iconMap, width) + 1)
    height: mq-px2em(map-get($iconMap, height) + 1)

  // Outputs background position in em
  @if $type == all or $type == bg 
    background-position: mq-px2em(map-get($iconMap, x)) mq-px2em(map-get($iconMap, y))

/* USAGE

.class-vk
    position: relative
    &:before
        +pseudo
        top: 0
        left: 0
        +sprite(vk)

*/